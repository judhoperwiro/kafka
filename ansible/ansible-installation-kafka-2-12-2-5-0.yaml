---
- hosts: kafka
  remote_user: redhat
  become: true
  tasks:
    - name: 01. Install Packages
      yum:
        name:
        - java-11-openjdk
        - nmap-ncat
        state: present

    - name: 02. Create Group kafka
      group:
        name: kafka
        gid: 3040

    - name: 03. Create User kafka
      user:
        name: kafka
        password: "{{ 'kafka' | password_hash('sha512', 'mysecretsalt')}}"
        shell: /bin/bash
        uid: 3041
        group: kafka
        expires: -1
        home: /home/kafka
        
    - name: 04. set users password valid time
      shell: chage -I -1 -m 0 -M 99999 -E -1 kafka

    - name: 05. prepare Source dir
      file:
        path: /Source
        owner: redhat
        group: redhat
        mode: 0777
        state: directory

    - name: 06. transfer kafka_2.12-2.5.0.tgz file
      copy:
        src: /data/ansible/kafka/source/kafka_2.12-2.5.0.tgz
        dest: /Source

    - name: 07. Extract tar files
      unarchive:
        src: /Source/kafka_2.12-2.5.0.tgz
        dest: /Source
        mode: 0755
        remote_src: yes

    - name: 08. prepare Source dir
      file:
        path: "{{ item }}"
        owner: kafka
        group: kafka
        mode: 0750
        state: directory
      with_items: 
        - /data/kafkadata/kafka-bin
        - /data/kafkadata/zookeeper
        - /data/kafkadata/kafka-logs

    - name: 09. Move kafka file
      shell: cp -r /Source/kafka_2.12-2.5.0/* /data/kafkadata/kafka-bin/

    - name: 10. Change Ownership of kafka-data
      file:
        path: /data/kafkadata/kafka-bin/
        owner: kafka
        group: kafka
        mode: 0750
        state: directory
        recurse: yes

    - name: 11. Edit zookeeper.properties [dataDir]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/zookeeper.properties
        regexp: '^dataDir'
        line: dataDir=/data/kafkadata/zookeeper

    - name: 12. Edit zookeeper.properties [dataDir]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/zookeeper.properties
        regexp: '^admin.enableServer'
        line: admin.enableServer=true

    - name: 13. Update zookeeper.properties [zookeeper cluster]
      blockinfile:
        path: /data/kafkadata/kafka-bin/config/zookeeper.properties
        block: |
          # add configuration for zookeeper cluster
          initLimit=5
          syncLimit=2
          server.0={{ hostname_01 }}:2888:3888
          server.1={{ hostname_02 }}:2888:3888
          server.2={{ hostname_03 }}:2888:3888

    - name: 14. Edit server.properties [log.dirs]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/server.properties
        regexp: '^broker.id'
        line: broker.id={{ broker_id }}

    - name: 15. Edit server.properties [listeners]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/server.properties
        regexp: '^#listeners=PLAINTEXT://:9092'
        insertafter: '^#listeners=PLAINTEXT://:9092'
        line: listeners=PLAINTEXT://{{ hostname }}:9092

    - name: 16. Edit server.properties [log.dirs]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/server.properties
        regexp: '^log.dirs'
        line: log.dirs=/data/kafkadata/kafka-logs


    - name: 17. Edit server.properties [num.partitions]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/server.properties
        regexp: '^num.partitions'
        line: num.partitions=3


    - name: 18. Edit server.properties [offsets.topic.replication.factor]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/server.properties
        regexp: '^offsets.topic.replication.factor'
        line: offsets.topic.replication.factor=3


    - name: 19. Edit server.properties [transaction.state.log.replication.factor]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/server.properties
        regexp: '^transaction.state.log.replication.factor'
        line: transaction.state.log.replication.factor=3


    - name: 20. Edit server.properties [transaction.state.log.min.isr]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/server.properties
        regexp: '^transaction.state.log.min.isr'
        line: transaction.state.log.min.isr=3

    - name: 21. Edit server.properties [zookeeper.connect]
      lineinfile:
        path: /data/kafkadata/kafka-bin/config/server.properties
        regexp: '^zookeeper.connect='
        line: zookeeper.connect={{ hostname_01 }}:2181,{{ hostname_02 }}:2181,{{ hostname_03 }}:2181
      tags: new

    - name: 22. Create myid File
      file:
        path: /data/kafkadata/zookeeper/myid
        owner: kafka
        group: kafka
        mode: 0750
        state: touch

    - name: 23. Insert myid File
      lineinfile:
        path: /data/kafkadata/zookeeper/myid
        line: "{{ myid }}"

    - name: 24. Insert Bashrc File
      lineinfile:
        path: /home/kafka/.bashrc
        line: |
          export KAFKA_HOME=/data/kafkadata/kafka-bin
          export PATH=$PATH:$KAFKA_HOME/bin

#    - name: 22. Update Bashrc File
#      become_user: kafka
#      command: source .bashrc
#      args:
#        chdir: /home/kafka/
